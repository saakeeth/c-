//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
   
    //Function to check if brackets are balanced or not.
    bool isOpen(char c)
        {
            return c=='(' || c=='{' || c=='[';
        }
        bool isMatch(char a,char b)
        {
            return (a =='{'&& b =='}') || (a =='['&& b ==']') || (a== '('&& b== ')');
        }
   
    bool ispar(string str)
    {
        // Your code here
       
        
        stack <char>s;
        for (int i=0;i<str.length();i++)
        {
            char ch=str[i];
            if (isOpen(ch))
            {
                s.push(ch);
            }
            else
            {
                if(s.empty())
                    return false;
                if(!isMatch(s.top(),ch))
                    return false;
                else
                {
                    s.pop();  
                }
            }
        }
        return s.empty();
    }

};

//{ Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}
// } Driver Code Ends
